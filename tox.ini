# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit
min_version = 4.0.0

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
;lib_path = {tox_root}/lib/charms/operator_name_with_underscores
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
allowlist_externals =
    poetry

[testenv:format]
description = Apply coding style standards to code
commands_pre =
    poetry install --only format
commands =
    poetry lock
    poetry run ruff format {[vars]all_path}
    poetry run ruff check --fix {[vars]all_path}

[testenv:lint]
deps =
    pyright
description = Check code against coding style standards
allowlist_externals =
    {[testenv]allowlist_externals}
    find
commands_pre =
    poetry install --only lint,main,charm-libs,format
commands =
    poetry run pyright
    poetry check --lock
    poetry run codespell {[vars]all_path}
    poetry run ruff check {[vars]all_path}
    poetry run ruff format --check --diff {[vars]all_path}
    find {[vars]all_path} -type f \( -name "*.sh" -o -name "*.bash" \) -exec poetry run shellcheck --color=always \{\} +

[testenv:unit]
description = Run unit tests
commands_pre =
    poetry install --only main,charm-libs,unit
commands =
    poetry run coverage run --source={[vars]src_path} \
                 -m pytest \
                 --tb native \
                 -v \
                 -s \
                 {posargs} \
                 {[vars]tests_path}/unit
    poetry run coverage report

[testenv:integration-{charm}]
description = Run integration tests
pass_env =
    CI
set_env =
    charm: TESTFILE=test_charm.py
commands_pre =
    poetry install --only integration
commands =
    poetry run pytest -v \
           -s \
           --tb native \
           --log-cli-level=INFO \
           -x \
           {posargs} \
           {[vars]tests_path}/integration/{env:TESTFILE}
